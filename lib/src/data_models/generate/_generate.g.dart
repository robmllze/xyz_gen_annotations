//.title
// â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“
//
// GENERATED BY ðŸ‡½ðŸ‡¾ðŸ‡¿ GEN - DO NOT MODIFY BY HAND
// See: https://github.com/robmllze/xyz_gen
//
// â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“
//.title~

// ignore_for_file: annotate_overrides
// ignore_for_file: empty_constructor_bodies
// ignore_for_file: invalid_null_aware_operator
// ignore_for_file: overridden_fields
// ignore_for_file: unnecessary_non_null_assertion
// ignore_for_file: unnecessary_null_comparison
// ignore_for_file: unnecessary_this

part of 'generate.dart';

// â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘

class Generate extends _Generate {
  //
  //
  //

  static const CLASS_NAME = 'Generate';

  @override
  String get $className => CLASS_NAME;

  final String? fallbackDartSdkPath;
  final Set<String>? templateFilePaths;
  final Set<String>? rootPaths;
  final Set<String>? subPaths;
  final Set<String>? pathPatterns;
  final String? outputDirPath;
  final List<Model>? annotations;

  //
  //
  //

  const Generate({
    this.fallbackDartSdkPath,
    this.templateFilePaths,
    this.rootPaths,
    this.subPaths,
    this.pathPatterns,
    this.outputDirPath,
    this.annotations,
  });

  const Generate.c2({
    this.fallbackDartSdkPath,
    this.templateFilePaths,
    this.rootPaths,
    this.subPaths,
    this.pathPatterns,
    this.outputDirPath,
    this.annotations,
  });

  factory Generate.c3({
    String? fallbackDartSdkPath,
    Set<String>? templateFilePaths,
    Set<String>? rootPaths,
    Set<String>? subPaths,
    Set<String>? pathPatterns,
    String? outputDirPath,
    List<Model>? annotations,
  }) {
    return Generate(
      fallbackDartSdkPath: fallbackDartSdkPath,
      templateFilePaths: templateFilePaths,
      rootPaths: rootPaths,
      subPaths: subPaths,
      pathPatterns: pathPatterns,
      outputDirPath: outputDirPath,
      annotations: annotations,
    );
  }

  factory Generate.from(
    BaseModel? other,
  ) {
    try {
      return fromOrNull(other)!;
    } catch (e) {
      assert(false, 'Generate.from: $e');
      rethrow;
    }
  }

  static Generate? fromOrNull(
    BaseModel? other,
  ) {
    return fromJsonOrNull(other?.toJson())!;
  }

  factory Generate.of(
    Generate other,
  ) {
    try {
      return ofOrNull(other)!;
    } catch (e) {
      assert(false, 'Generate.of: $e');
      rethrow;
    }
  }

  static Generate? ofOrNull(
    Generate? other,
  ) {
    return fromJsonOrNull(other?.toJson());
  }

  factory Generate.fromJsonString(
    String source,
  ) {
    try {
      return fromJsonStringOrNull(source)!;
    } catch (e) {
      assert(false, 'Generate.fromJsonString: $e');
      rethrow;
    }
  }

  static Generate? fromJsonStringOrNull(
    String? source,
  ) {
    try {
      if (source!.isNotEmpty) {
        final decoded = jsonDecode(source);
        return Generate.fromJson(decoded);
      } else {
        return const Generate.c2();
      }
    } catch (_) {
      return null;
    }
  }

  factory Generate.fromJson(
    Map<String, dynamic>? otherData,
  ) {
    try {
      return fromJsonOrNull(otherData)!;
    } catch (e) {
      assert(false, 'Generate.fromJson: $e');
      rethrow;
    }
  }

  static Generate? fromJsonOrNull(
    Map<String, dynamic>? otherData,
  ) {
    try {
      final fallbackDartSdkPath0 =
          otherData?[GenerateFields.fallbackDartSdkPath.name];
      final fallbackDartSdkPath =
          fallbackDartSdkPath0?.toString().trim().nullIfEmpty;
      final templateFilePaths0 =
          otherData?[GenerateFields.templateFilePaths.name];
      final templateFilePaths = letSet(templateFilePaths0)
          ?.map(
            (p0) => p0?.toString().trim().nullIfEmpty,
          )
          .nonNulls
          .nullIfEmpty
          ?.toSet();
      final rootPaths0 = otherData?[GenerateFields.rootPaths.name];
      final rootPaths = letSet(rootPaths0)
          ?.map(
            (p0) => p0?.toString().trim().nullIfEmpty,
          )
          .nonNulls
          .nullIfEmpty
          ?.toSet();
      final subPaths0 = otherData?[GenerateFields.subPaths.name];
      final subPaths = letSet(subPaths0)
          ?.map(
            (p0) => p0?.toString().trim().nullIfEmpty,
          )
          .nonNulls
          .nullIfEmpty
          ?.toSet();
      final pathPatterns0 = otherData?[GenerateFields.pathPatterns.name];
      final pathPatterns = letSet(pathPatterns0)
          ?.map(
            (p0) => p0?.toString().trim().nullIfEmpty,
          )
          .nonNulls
          .nullIfEmpty
          ?.toSet();
      final outputDirPath0 = otherData?[GenerateFields.outputDirPath.name];
      final outputDirPath = outputDirPath0?.toString().trim().nullIfEmpty;
      final annotations0 = otherData?[GenerateFields.annotations.name];
      final annotations = letList(annotations0)
          ?.map(
            (p0) => () {
              final a = letMap<String, dynamic>(p0);
              return a != null ? Model.fromJson(a) : null;
            }(),
          )
          .nonNulls
          .nullIfEmpty
          ?.toList();
      return Generate(
        fallbackDartSdkPath: fallbackDartSdkPath,
        templateFilePaths: templateFilePaths,
        rootPaths: rootPaths,
        subPaths: subPaths,
        pathPatterns: pathPatterns,
        outputDirPath: outputDirPath,
        annotations: annotations,
      );
    } catch (e) {
      return null;
    }
  }

  factory Generate.fromUri(
    Uri? uri,
  ) {
    try {
      return fromUriOrNull(uri)!;
    } catch (e) {
      assert(false, 'Generate.fromUri: $e');
      rethrow;
    }
  }

  static Generate? fromUriOrNull(
    Uri? uri,
  ) {
    try {
      if (uri != null && uri.path == CLASS_NAME) {
        return Generate.fromJson(uri.queryParameters);
      } else {
        return const Generate.c2();
      }
    } catch (_) {
      return null;
    }
  }

  //
  //
  //

  @override
  Map<String, dynamic> toJson({
    dynamic defaultValue,
    bool includeNulls = false,
  }) {
    try {
      final fallbackDartSdkPath0 = this.fallbackDartSdkPath?.trim().nullIfEmpty;
      final templateFilePaths0 = this
          .templateFilePaths
          ?.map(
            (p0) => p0?.trim().nullIfEmpty,
          )
          .nonNulls
          .nullIfEmpty
          ?.toList();
      final rootPaths0 = this
          .rootPaths
          ?.map(
            (p0) => p0?.trim().nullIfEmpty,
          )
          .nonNulls
          .nullIfEmpty
          ?.toList();
      final subPaths0 = this
          .subPaths
          ?.map(
            (p0) => p0?.trim().nullIfEmpty,
          )
          .nonNulls
          .nullIfEmpty
          ?.toList();
      final pathPatterns0 = this
          .pathPatterns
          ?.map(
            (p0) => p0?.trim().nullIfEmpty,
          )
          .nonNulls
          .nullIfEmpty
          ?.toList();
      final outputDirPath0 = this.outputDirPath?.trim().nullIfEmpty;
      final annotations0 = this
          .annotations
          ?.map(
            (p0) => p0?.toJson(),
          )
          .nonNulls
          .nullIfEmpty
          ?.toList();
      final withNulls = <String, dynamic>{
        GenerateFields.fallbackDartSdkPath.name: fallbackDartSdkPath0,
        GenerateFields.templateFilePaths.name: templateFilePaths0,
        GenerateFields.rootPaths.name: rootPaths0,
        GenerateFields.subPaths.name: subPaths0,
        GenerateFields.pathPatterns.name: pathPatterns0,
        GenerateFields.outputDirPath.name: outputDirPath0,
        GenerateFields.annotations.name: annotations0,
      }.mapWithDefault(defaultValue);
      return includeNulls ? withNulls : withNulls.nonNulls;
    } catch (e) {
      assert(false, 'Generate.toJson: $e');
      rethrow;
    }
  }

  //
  //
  //

  @override
  Generate copyWith(BaseModel? other) {
    final a = this.toJson();
    final b = other?.toJson();
    final c = {...a, ...?b};
    return Generate.fromJson(c);
  }

  //
  //
  //

  // fallbackDartSdkPath.
  String? get fallbackDartSdkPathField => this.fallbackDartSdkPath;

  // templateFilePaths.
  Set<String>? get templateFilePathsField => this.templateFilePaths;

  // rootPaths.
  Set<String>? get rootPathsField => this.rootPaths;

  // subPaths.
  Set<String>? get subPathsField => this.subPaths;

  // pathPatterns.
  Set<String>? get pathPatternsField => this.pathPatterns;

  // outputDirPath.
  String? get outputDirPathField => this.outputDirPath;

  // annotations.
  List<Model>? get annotationsField => this.annotations;
}

// â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘

enum GenerateFields {
  //
  //
  //

  fallbackDartSdkPath(
    const Field(
      fieldName: 'fallbackDartSdkPath',
      fieldType: 'String',
      nullable: true,
    ),
  ),
  templateFilePaths(
    const Field(
      fieldName: 'templateFilePaths',
      fieldType: 'Set<String>',
      nullable: true,
    ),
  ),
  rootPaths(
    const Field(
      fieldName: 'rootPaths',
      fieldType: 'Set<String>',
      nullable: true,
    ),
  ),
  subPaths(
    const Field(
      fieldName: 'subPaths',
      fieldType: 'Set<String>',
      nullable: true,
    ),
  ),
  pathPatterns(
    const Field(
      fieldName: 'pathPatterns',
      fieldType: 'Set<String>',
      nullable: true,
    ),
  ),
  outputDirPath(
    const Field(
      fieldName: 'outputDirPath',
      fieldType: 'String',
      nullable: true,
    ),
  ),
  annotations(
    const Field(
      fieldName: 'annotations',
      fieldType: 'List<Model>',
      nullable: true,
    ),
  );

  //
  //
  //

  final Field field;

  //
  //
  //

  const GenerateFields(this.field);

  //
  //
  //

  String get name => this.field.fieldName!;
}
