//.title
// â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“
//
// GENERATED BY ðŸ‡½ðŸ‡¾ðŸ‡¿ GEN - DO NOT MODIFY BY HAND
// See: https://github.com/robmllze/xyz_gen
//
// â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“â–“
//.title~

// ignore_for_file: annotate_overrides
// ignore_for_file: empty_constructor_bodies
// ignore_for_file: invalid_null_aware_operator
// ignore_for_file: overridden_fields
// ignore_for_file: unnecessary_non_null_assertion
// ignore_for_file: unnecessary_null_comparison
// ignore_for_file: unnecessary_this

part of 'example.dart';

// â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘

class ModelUser extends _ModelUser {
  //
  //
  //

  static const K_EMAIL = 'email';
  static const K_FIRST_NAME = 'first_name';
  static const K_ID = 'id';
  static const K_LAST_NAME = 'last_name';

  static const CLASS = 'ModelUser';

  @override
  String get $class => CLASS;

  String? email;
  String? firstName;
  String? id;
  String? lastName;

  //
  //
  //

  ModelUser.empty();

  //
  //
  //

  factory ModelUser({
    required String email,
    String? firstName,
    required String id,
    String? lastName,
  }) {
    return ModelUser.b(
      email: email,
      firstName: firstName,
      id: id,
      lastName: lastName,
    );
  }

  //
  //
  //

  ModelUser.b({
    this.email,
    this.firstName,
    this.id,
    this.lastName,
  }) {
    assert(email != null);
    assert(id != null);
  }

  //
  //
  //

  factory ModelUser.from(
    Model? other,
  ) {
    return ModelUser.fromJson(
      letAs<DataModel>(other)?.data ?? other?.toJson(),
    );
  }

  //
  //
  //

  static ModelUser? fromOrNull(
    Model? other,
  ) {
    return other != null ? ModelUser.from(other) : null;
  }

  //
  //
  //

  factory ModelUser.of(
    ModelUser? other,
  ) {
    return ModelUser.fromJson(other?.toJson());
  }

  //
  //
  //

  factory ModelUser.fromJsonString(
    String? source,
  ) {
    try {
      if (source != null && source.isNotEmpty) {
        final decoded = jsonDecode(source);
        return ModelUser.fromJson(decoded);
      } else {
        return ModelUser.empty();
      }
    } catch (e) {
      assert(false, e);
      rethrow;
    }
  }

  //
  //
  //

  factory ModelUser.fromJson(
    Map<String, dynamic>? otherData,
  ) {
    try {
      return ModelUser.empty()
        ..$email = otherData?[K_EMAIL]
        ..$firstName = otherData?[K_FIRST_NAME]
        ..$id = otherData?[K_ID]
        ..$lastName = otherData?[K_LAST_NAME];
    } catch (e) {
      assert(false, e);
      rethrow;
    }
  }

  //
  //
  //

  factory ModelUser.fromUri(
    Uri? uri,
  ) {
    try {
      if (uri != null && uri.path == CLASS) {
        return ModelUser.fromJson(uri.queryParameters);
      } else {
        return ModelUser.b();
      }
    } catch (e) {
      assert(false, e);
      rethrow;
    }
  }

  //
  //
  //

  @override
  Map<String, dynamic> toJson({
    dynamic defaultValue,
    bool includeNulls = false,
  }) {
    try {
      final withNulls = <String, dynamic>{
        K_EMAIL: this.$email,
        K_FIRST_NAME: this.$firstName,
        K_ID: this.$id,
        K_LAST_NAME: this.$lastName,
      }.mapWithDefault(defaultValue);
      return includeNulls ? withNulls : withNulls.nonNulls;
    } catch (e) {
      assert(false, e);
      rethrow;
    }
  }

  //
  //
  //

  @override
  T empty<T extends Model>() {
    return ModelUser.b() as T;
  }

  //
  //
  //

  @override
  T copy<T extends Model>() {
    return (ModelUser.b()..updateWith(this)) as T;
  }

  //
  //
  //

  @override
  void updateWithJson(
    Map<String, dynamic>? otherData,
  ) {
    if (otherData != null && otherData.isNotEmpty) {
      final other = ModelUser.fromJson(otherData);
      if (other.email != null) {
        this.email = other.email!;
      }
      if (other.firstName != null) {
        this.firstName = other.firstName!;
      }
      if (other.id != null) {
        this.id = other.id!;
      }
      if (other.lastName != null) {
        this.lastName = other.lastName!;
      }
    }
  }

  //
  //
  //

  // email.
  String get emailField => this.email!;
  set emailField(String v) => this.email = v;
  @protected
  dynamic get $email => (this.email?.toString().trim().nullIfEmpty?.toLowerCase())!;
  @protected
  set $email(v) => this.email = v?.toString().trim().nullIfEmpty?.toLowerCase();

  // firstName.
  String? get firstNameField => this.firstName;
  set firstNameField(String? v) => this.firstName = v;
  @protected
  dynamic get $firstName => this.firstName?.toString().trim().nullIfEmpty;
  @protected
  set $firstName(v) => this.firstName = v?.toString().trim().nullIfEmpty;

  // id.
  String get idField => this.id!;
  set idField(String v) => this.id = v;
  @protected
  dynamic get $id => (this.id?.toString().trim().nullIfEmpty)!;
  @protected
  set $id(v) => this.id = v?.toString().trim().nullIfEmpty;

  // lastName.
  String? get lastNameField => this.lastName;
  set lastNameField(String? v) => this.lastName = v;
  @protected
  dynamic get $lastName => this.lastName?.toString().trim().nullIfEmpty;
  @protected
  set $lastName(v) => this.lastName = v?.toString().trim().nullIfEmpty;
}
